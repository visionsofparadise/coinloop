{
    "openapi": "3.0.3",
    "info": {
        "title": "Distributed Cash Table HTTP API",
        "description": "API specification for nodes participating in the 'Distributed Cash Table' DHT network.",
        "version": "1.0.0"
    },
    "paths": {
        "/v1": {
            "description": "Resource for handling the recipient node.",
            "get": {
                "operationId": "ping",
                "summary": "Gets the recipient node.",
                "description": "The recipient node will return information about itself. This endpoint is used for pings and healthchecks.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/InternalError"
                    }
                }
            }
        },
        "/v1/nodes": {
            "description": "Resource for handling nodes in the recipients routing table.",
            "get": {
                "operationId": "listNodes",
                "summary": "Lists the closest nodes to the recipient or to the queried nodeKey.",
                "description": "The recipient node will return the closest nodes it has stored, or closest to the queried nodeKey. Clients should recursively use this method to find a target node. It is up to clients to measure nodeKey distances to make progress towards a target node.",
                "parameters": [
                    {
                        "name": "nodeKey",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Hash160"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/InternalError"
                    }
                }
            }
        },
        "/v1/tokens": {
            "description": "Resource for handling a tokens",
            "get": {
                "operationId": "listTokens",
                "summary": "Lists the recipient nodes tokens in ascending order. A cursor key may be returned if more tokens exist.",
                "description": "The recipient will return a list of tokens in ascending order. A cursor key may be returned if more tokens exist.",
                "parameters": [
                    {
                        "name": "minimumKey",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Hash160"
                        }
                    },
                    {
                        "name": "maximumKey",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Hash160"
                        }
                    },
                    {
                        "name": "cursorKey",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Hash160"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/InternalError"
                    }
                }
            }
        },
        "/v1/tokens/{tokenKey}": {
            "description": "Resource for handling a token identified by it's tokenKey",
            "get": {
                "operationId": "getToken",
                "summary": "Gets the requested token.",
                "description": "The recipient will return the token identified by it's tokenKey.",
                "parameters": [
                    {
                        "name": "tokenKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Hash160"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/InternalError"
                    }
                }
            },
            "patch": {
                "operationId": "patchToken",
                "summary": "Creates or updates a token.",
                "description": "The recipient will create a new token if not found and merge if they do. The recipient will return the updated token.",
                "parameters": [
                    {
                        "name": "tokenKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Hash160"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/InternalError"
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "BadRequest": {
                "description": "Bad request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "The specified resource was not found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "InternalError": {
                "description": "Internal server error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        },
        "schemas": {
            "Error": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "message"
                ]
            },
            "Hash160": {
                "description": "Represents a 20 byte ripemd(sha256(value)) hash. Encoded as base64url.",
                "type": "string",
                "pattern": "^[A-Za-z0-9_-]+$",
                "minLength": 27,
                "maxLength": 27
            }
        }
    }
}