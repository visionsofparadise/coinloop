{
    "openapi": "3.0.3",
    "info": {
        "title": "Distributed Cash Table HTTP API",
        "description": "API specification for nodes participating in the 'Distributed Cash Table' DHT network.",
        "version": "1.0.0"
    },
    "paths": {
        "/v1": {
            "description": "Resource for handling the recipient node.",
            "get": {
                "operationId": "ping",
                "summary": "Gets the recipient node.",
                "description": "The recipient node will return information about itself. This endpoint is used for pings and healthchecks.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Node"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/InternalError"
                    }
                }
            }
        },
        "/v1/nodes/{publicKeyHash160}": {
            "description": "Resource for handling a node identified by it's publicKeyHash160.",
            "get": {
                "operationId": "getNode",
                "summary": "Lists the closest nodes to the requested publicKeyHash160.",
                "description": "The recipient node will return the closest nodes it has stored to the publicKeyHash160. Clients should recursively use this method to find a target node. It is up to clients to measure publicKeyHash160 distances to make progress towards a target node.",
                "parameters": [
                    {
                        "name": "publicKeyHash160",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Hash160"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Node"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/InternalError"
                    }
                }
            }
        },
        "/v1/tokens/{proofOfWorkHash160}": {
            "description": "Resource for handling a token identified by it's proofOfWorkHash160",
            "get": {
                "operationId": "getToken",
                "summary": "Gets the requested token.",
                "description": "The recipient will return the token identified by it's proofOfWorkHash160.",
                "parameters": [
                    {
                        "name": "proofOfWorkHash160",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Hash160"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/InternalError"
                    }
                }
            },
            "patch": {
                "operationId": "patchToken",
                "summary": "Creates or updates a token.",
                "description": "The recipient will create a new token if not found and merge if they do. The recipient will return the updated token.",
                "parameters": [
                    {
                        "name": "proofOfWorkHash160",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Hash160"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Token"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/InternalError"
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "BadRequest": {
                "description": "Bad request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "The specified resource was not found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "InternalError": {
                "description": "Internal server error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        },
        "schemas": {
            "Token": {
                "description": "Represents a value in the distributed hash table. A token tracks valid state chains and commits from other identities. An identity will use commits to calculate the current consensus state chain.",
                "type": "object",
                "properties": {
                    "proofOfWorkHash160": {
                        "$ref": "#/components/schemas/Hash160"
                    },
                    "roots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Root"
                        }
                    },
                    "transfers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transfer"
                        }
                    },
                    "ends": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/End"
                        }
                    },
                    "commits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Commit"
                        }
                    }
                },
                "required": [
                    "proofOfWorkHash160",
                    "roots",
                    "transfers",
                    "ends",
                    "commits"
                ]
            },
            "Commit": {
                "description": "Represents a signed declaration from a node that a target state is the currently the consensus state.",
                "type": "object",
                "properties": {
                    "targetHash128": {
                        "$ref": "#/components/schemas/Hash128"
                    },
                    "sequenceNumber": {
                        "description": "An unsigned integer.",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "proofOfWork": {
                        "$ref": "#/components/schemas/ProofOfWork"
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "required": [
                    "targetHash128",
                    "sequenceNumber",
                    "proofOfWork",
                    "signature"
                ]
            },
            "End": {
                "description": "Represents an identity ending a state chain and relinqueshing ownership so that a new state chain can become consensus.",
                "type": "object",
                "properties": {
                    "previousHash128": {
                        "$ref": "#/components/schemas/Hash128"
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "required": [
                    "previousHash128",
                    "signature"
                ]
            },
            "Error": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "message"
                ]
            },
            "Hash128": {
                "description": "Represents a 16 byte md5(sha256(value)) hash. Encoded as base64url.",
                "type": "string",
                "pattern": "^[A-Za-z0-9_-]+$",
                "minLength": 24,
                "maxLength": 24
            },
            "Hash160": {
                "description": "Represents a 20 byte ripemd(sha256(value)) hash. Encoded as base64url.",
                "type": "string",
                "pattern": "^[A-Za-z0-9_-]+$",
                "minLength": 28,
                "maxLength": 28
            },
            "Node": {
                "description": "A node is an agent in the network, typically a server, that is utilizing the DCT protocol.",
                "type": "object",
                "properties": {
                    "version": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "ip": {
                        "type": "string",
                        "minLength": 11,
                        "maxLength": 15
                    },
                    "udpPort": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "tcpPort": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "rangeBits": {
                        "description": "Represents a bitwise distance.",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 160
                    },
                    "proofOfWork": {
                        "$ref": "#/components/schemas/ProofOfWork"
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "required": [
                    "version",
                    "ip",
                    "udpPort",
                    "tcpPort",
                    "rangeBits",
                    "pageSizeBytes",
                    "proofOfWork",
                    "signature"
                ]
            },
            "ProofOfWork": {
                "description": "Represents proof of work by a given identity. A proof of work score is given by the bitwise distance of hash128(publicKeyHash160 + bytes) and the publicKeyHash160.",
                "type": "object",
                "properties": {
                    "publicKeyHash160": {
                        "$ref": "#/components/schemas/Hash160"
                    },
                    "bytes": {
                        "type": "string",
                        "pattern": "^[A-Za-z0-9_-]+$",
                        "minLength": 43,
                        "maxLength": 43
                    }
                },
                "required": [
                    "publicKeyHash160",
                    "bytes"
                ]
            },
            "Root": {
                "description": "Represents the creation of a new token and ownership being assigned to the proofOfWork publicKeyHash160.",
                "type": "object",
                "properties": {
                    "proofOfWork": {
                        "$ref": "#/components/schemas/ProofOfWork"
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "required": [
                    "proofOfWork",
                    "signature"
                ]
            },
            "SecretKey": {
                "description": "Represents a 32 byte secret key. Encoded as base64url.",
                "type": "string",
                "pattern": "^[A-Za-z0-9_-]+$",
                "minLength": 43,
                "maxLength": 43
            },
            "Signature": {
                "description": "A signature produced from a private key. Encoded as base64.",
                "type": "string",
                "pattern": "^[A-Za-z0-9_-]+$",
                "minLength": 94,
                "maxLength": 96
            },
            "Transfer": {
                "description": "Represents an identity from a previous state assigning ownership to a new identity.",
                "type": "object",
                "properties": {
                    "index": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "maximum": 255
                    },
                    "previousHash128": {
                        "$ref": "#/components/schemas/Hash128"
                    },
                    "publicKeyHash160": {
                        "$ref": "#/components/schemas/Hash160"
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "required": [
                    "index",
                    "previousHash128",
                    "publicKeyHash160",
                    "signature"
                ]
            }
        }
    }
}